# --------------------------------------
# sway configuration
# --------------------------------------
# modifier key [Mod1 = Alt | Mod4 = Win]
set $mod Mod4

# terminal emulator
set $terminal alacritty

# web browser
set $web_browser firefox

# launcher dimensions
set $ld_dimensions --option window.dimensions.columns=90 --option window.dimensions.lines=7
set $le_dimensions --option window.dimensions.columns=40 --option window.dimensions.lines=7

# launcher
set $launcher_exe $terminal --class "launcher" $le_dimensions -e launcher.sh -e
set $launcher_doc $terminal --class "launcher" $ld_dimensions -e launcher.sh -d

# special rule let the launcher float
for_window [app_id="launcher"] floating enable

# move keepassxc directly to the scratchpad
for_window [title=".*KeePassXC"] {
    move to scratchpad
    resize set 1720 980
    scratchpad show
}

# screen locker
set $screen_locker swaylock

# define workspaces names
# - first character: describes the monitor number
# - second character: describes the workspace id
set $init_workspace_monitor_one "11: 一 "
set $init_workspace_monitor_two "21: 一 "
set $init_workspace_monitor_three "31: 一 "

# font related
set $font Source Code Pro
set $font_size 10

# border related
set $border_size 6

# colors
set $background   #383838
set $foreground   #e5dbd0
set $dark_gray    #454545
set $red          #da7c72
set $green        #b8b48a
set $orange       #dfa883
set $blue         #93b3a3
set $magenta      #cc9999
set $cyan         #9fb193
set $bright_white #f2e7e0
set $gray         #998f85
set $yellow       #f7d0a2

# font used for title and bar
font pango:$font $font_size

# configure input devices
input *
{
    # for keyboards
    xkb_layout us,de
    xkb_options grp:ctrls_toggle,caps:backspace,shift:both_capslock_cancel

    # for touchpad
    tap enabled
}

seat *
{
    hide_cursor 2000
}

# gaps used around applications
gaps
{
    outer 0
    inner 20
}

# border style
default_border pixel $border_size
default_floating_border pixel $border_size

# mouse related
focus_follows_mouse yes

# csd:                  border      background  text        indicator   child_border
client.focused          $dark_gray  $dark_gray  $foreground $dark_gray  $dark_gray
client.focused_inactive $gray       $gray       $foreground $gray       $gray
client.unfocused        $gray       $gray       $foreground $gray       $gray
client.urgent           $orange     $orange     $foreground $orange     $orange

# status bar configuration
bar
{
    height 35
    position top

    wrap_scroll no
    tray_output none

    strip_workspace_name no
    strip_workspace_numbers yes

    status_padding 0
    status_edge_padding 0
    status_command exec statusinfo.sh

    colors
    {
        separator $gray
        statusline $foreground
        background $background

        active_workspace $gray $gray $background
        inactive_workspace $gray $gray $background

        focused_workspace $green $green $background
        urgent_workspace $yellow $yellow $background
    }
}

# modifier to move/resize floating windows
floating_modifier $mod normal

bindsym
{
    # applications
    $mod+F2 exec $web_browser
    $mod+Return exec $terminal
    $mod+9 exec $screen_locker

    $mod+d exec $launcher_exe
    $mod+Shift+d exec $launcher_doc

    # screenshot utilities
    # select output and take a screenshot
    $mod+F12 exec swaymsg -t get_outputs | \
        jq -r '.[] | select(.active) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | \
        slurp | \
        grim -t png -g - /tmp/$(date '+%Y%m%d_%s_grim.png')

    # draw selection and take a screenshot
    $mod+Shift+F12 exec slurp | \
        grim -t png -g - /tmp/$(date '+%Y%m%d_%s_grim.png')

    # select windows and take a screenshot
    $mod+Control+F12 exec swaymsg -t get_tree | \
        jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | \
        slurp | \
        grim -t png -g - /tmp/$(date '+%Y%m%d_%s_grim.png')

    # kill focused window
    $mod+Shift+q kill

    # reload the configuration file
    $mod+Shift+r reload

    # exit sway
    $mod+Shift+c exit

    # move focus around
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # move focused window around
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right

    # switch to workspace
    $mod+1 exec workspace_handler.sh -s -w 1
    $mod+2 exec workspace_handler.sh -s -w 2
    $mod+3 exec workspace_handler.sh -s -w 3
    $mod+4 exec workspace_handler.sh -s -w 4

    # move focused container to workspace
    $mod+Shift+1 exec workspace_handler.sh -m -w 1
    $mod+Shift+2 exec workspace_handler.sh -m -w 2
    $mod+Shift+3 exec workspace_handler.sh -m -w 3
    $mod+Shift+4 exec workspace_handler.sh -m -w 4

    # define were a new split should happen
    $mod+h splith
    $mod+v splitv

    # switch the current container between different layout styles
    $mod+s layout stacking
    $mod+t layout tabbed
    $mod+e layout toggle split

    # make the current focus fullscreen
    $mod+Shift+f fullscreen

    # toggle the current focus between tiling and floating mode
    $mod+f floating toggle

    # swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle

    # scratchpad handling
    $mod+tab scratchpad show
    $mod+Shift+s move to scratchpad
}

# include separate files
include output.conf
include wallpaper.conf

# start notification daemon
exec mako &

# start auto-mounter
exec udiskie &
