[
    # custom
    { include: [ "<bits/exception.h>", private, "<exception>", public ] },

    # from stl.c.headers.imp (modified to private -> public)
    { include: [ "<assert.h>", private, "<cassert>", public ] },
    { include: [ "<complex.h>", private, "<ccomplex>", public ] },
    { include: [ "<ctype.h>", private, "<cctype>", public ] },
    { include: [ "<errno.h>", private, "<cerrno>", public ] },
    { include: [ "<fenv.h>", private, "<cfenv>", public ] },
    { include: [ "<float.h>", private, "<cfloat>", public ] },
    { include: [ "<inttypes.h>", private, "<cinttypes>", public ] },
    { include: [ "<iso646.h>", private, "<ciso646>", public ] },
    { include: [ "<limits.h>", private, "<climits>", public ] },
    { include: [ "<locale.h>", private, "<clocale>", public ] },
    { include: [ "<math.h>", private, "<cmath>", public ] },
    { include: [ "<setjmp.h>", private, "<csetjmp>", public ] },
    { include: [ "<signal.h>", private, "<csignal>", public ] },
    { include: [ "<stdalign.h>", private, "<cstdalign>", public ] },
    { include: [ "<stdarg.h>", private, "<cstdarg>", public ] },
    { include: [ "<stdbool.h>", private, "<cstdbool>", public ] },
    { include: [ "<stddef.h>", private, "<cstddef>", public ] },
    { include: [ "<stdint.h>", private, "<cstdint>", public ] },
    { include: [ "<stdio.h>", private, "<cstdio>", public ] },
    { include: [ "<stdlib.h>", private, "<cstdlib>", public ] },
    { include: [ "<string.h>", private, "<cstring>", public ] },
    { include: [ "<tgmath.h>", private, "<ctgmath>", public ] },
    { include: [ "<time.h>", private, "<ctime>", public ] },
    { include: [ "<uchar.h>", private, "<cuchar>", public ] },
    { include: [ "<wchar.h>", private, "<cwchar>", public ] },
    { include: [ "<wctype.h>", private, "<cwctype>", public ] },

    # from libcxx.imp
    { include: ["<__functional_base>", private, "<functional>", public ] },
    { include: ["<__mutex_base>", private, "<mutex>", public ] },
    { symbol: [ "std::declval", private, "<utility>", public ] },
    { symbol: [ "std::forward", private, "<utility>", public ] },
    { symbol: [ "std::move", private, "<utility>", public ] },
    { symbol: [ "std::nullptr_t", private, "<cstddef>", public ] },
    { symbol: [ "std::string", private, "<string>", public ] },

    # ---
    # the following entries were changed to use the C++ header instead of
    # the C header.
    # ---

    # from gcc.symbols.imp
    { symbol: [ "blksize_t", private, "<sys/types.h>", public ] },
    { symbol: [ "blkcnt_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "blkcnt_t", private, "<sys/types.h>", public ] },
    { symbol: [ "blksize_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "clock_t", private, "<sys/types.h>", public ] },
    { symbol: [ "clock_t", private, "<ctime>", public ] },
    { symbol: [ "daddr_t", private, "<sys/types.h>", public ] },
    { symbol: [ "daddr_t", private, "<rpc/types.h>", public ] },
    { symbol: [ "dev_t", private, "<sys/types.h>", public ] },
    { symbol: [ "dev_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "error_t", private, "<cerrno>", public ] },
    { symbol: [ "error_t", private, "<argp.h>", public ] },
    { symbol: [ "error_t", private, "<argz.h>", public ] },
    { symbol: [ "fsblkcnt_t", private, "<sys/types.h>", public ] },
    { symbol: [ "fsblkcnt_t", private, "<sys/statvfs.h>", public ] },
    { symbol: [ "fsfilcnt_t", private, "<sys/types.h>", public ] },
    { symbol: [ "fsfilcnt_t", private, "<sys/statvfs.h>", public ] },
    { symbol: [ "gid_t", private, "<sys/types.h>", public ] },
    { symbol: [ "gid_t", private, "<grp.h>", public ] },
    { symbol: [ "gid_t", private, "<pwd.h>", public ] },
    { symbol: [ "gid_t", private, "<stropts.h>", public ] },
    { symbol: [ "gid_t", private, "<sys/ipc.h>", public ] },
    { symbol: [ "gid_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "gid_t", private, "<unistd.h>", public ] },
    { symbol: [ "id_t", private, "<sys/types.h>", public ] },
    { symbol: [ "id_t", private, "<sys/resource.h>", public ] },
    { symbol: [ "ino64_t", private, "<sys/types.h>", public ] },
    { symbol: [ "ino64_t", private, "<dirent.h>", public ] },
    { symbol: [ "ino_t", private, "<sys/types.h>", public ] },
    { symbol: [ "ino_t", private, "<dirent.h>", public ] },
    { symbol: [ "ino_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "int8_t", private, "<sys/types.h>", public ] },
    { symbol: [ "int8_t", private, "<cstdint>", public ] },
    { symbol: [ "int16_t", private, "<cstdint>", public ] },
    { symbol: [ "int32_t", private, "<cstdint>", public ] },
    { symbol: [ "int64_t", private, "<cstdint>", public ] },
    { symbol: [ "uint8_t", private, "<cstdint>", public ] },
    { symbol: [ "uint16_t", private, "<cstdint>", public ] },
    { symbol: [ "uint32_t", private, "<cstdint>", public ] },
    { symbol: [ "uint64_t", private, "<cstdint>", public ] },
    { symbol: [ "intptr_t", private, "<cstdint>", public ] },
    { symbol: [ "uintptr_t", private, "<cstdint>", public ] },
    { symbol: [ "intptr_t", private, "<unistd.h>", public ] },
    { symbol: [ "key_t", private, "<sys/types.h>", public ] },
    { symbol: [ "key_t", private, "<sys/ipc.h>", public ] },
    { symbol: [ "mode_t", private, "<sys/types.h>", public ] },
    { symbol: [ "mode_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "mode_t", private, "<sys/ipc.h>", public ] },
    { symbol: [ "mode_t", private, "<sys/mman.h>", public ] },
    { symbol: [ "nlink_t", private, "<sys/types.h>", public ] },
    { symbol: [ "nlink_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "off64_t", private, "<sys/types.h>", public ] },
    { symbol: [ "off64_t", private, "<unistd.h>", public ] },
    { symbol: [ "off_t", private, "<sys/types.h>", public ] },
    { symbol: [ "off_t", private, "<unistd.h>", public ] },
    { symbol: [ "off_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "off_t", private, "<sys/mman.h>", public ] },
    { symbol: [ "pid_t", private, "<sys/types.h>", public ] },
    { symbol: [ "pid_t", private, "<unistd.h>", public ] },
    { symbol: [ "pid_t", private, "<csignal>", public ] },
    { symbol: [ "pid_t", private, "<sys/msg.h>", public ] },
    { symbol: [ "pid_t", private, "<sys/shm.h>", public ] },
    { symbol: [ "pid_t", private, "<termios.h>", public ] },
    { symbol: [ "pid_t", private, "<ctime>", public ] },
    { symbol: [ "pid_t", private, "<utmpx.h>", public ] },
    { symbol: [ "sigset_t", private, "<csignal>", public ] },
    { symbol: [ "sigset_t", private, "<sys/epoll.h>", public ] },
    { symbol: [ "sigset_t", private, "<sys/select.h>", public ] },
    { symbol: [ "socklen_t", private, "<bits/socket.h>", private ] },
    { symbol: [ "socklen_t", private, "<unistd.h>", public ] },
    { symbol: [ "socklen_t", private, "<arpa/inet.h>", public ] },
    { symbol: [ "ssize_t", private, "<sys/types.h>", public ] },
    { symbol: [ "ssize_t", private, "<unistd.h>", public ] },
    { symbol: [ "ssize_t", private, "<monetary.h>", public ] },
    { symbol: [ "ssize_t", private, "<sys/msg.h>", public ] },
    { symbol: [ "suseconds_t", private, "<sys/types.h>", public ] },
    { symbol: [ "suseconds_t", private, "<sys/time.h>", public ] },
    { symbol: [ "suseconds_t", private, "<sys/select.h>", public ] },
    { symbol: [ "time_t", private, "<sys/types.h>", public ] },
    { symbol: [ "time_t", private, "<ctime>", public ] },
    { symbol: [ "timespec", private, "<ctime>", public ] },
    { symbol: [ "timeval", private, "<sys/time.h>", public ] },
    { symbol: [ "u_char", private, "<sys/types.h>", public ] },
    { symbol: [ "u_char", private, "<rpc/types.h>", public ] },
    { symbol: [ "uid_t", private, "<sys/types.h>", public ] },
    { symbol: [ "uid_t", private, "<unistd.h>", public ] },
    { symbol: [ "uid_t", private, "<pwd.h>", public ] },
    { symbol: [ "uid_t", private, "<csignal>", public ] },
    { symbol: [ "uid_t", private, "<stropts.h>", public ] },
    { symbol: [ "uid_t", private, "<sys/ipc.h>", public ] },
    { symbol: [ "uid_t", private, "<sys/stat.h>", public ] },
    { symbol: [ "useconds_t", private, "<sys/types.h>", public ] },
    { symbol: [ "useconds_t", private, "<unistd.h>", public ] },
    # glob.h seems to define size_t if necessary, but it should come from stddef.
    { symbol: [ "size_t", private, "<cstddef>", public ] },
    { symbol: [ "size_t", private, "<cstdio>", public ] },
    { symbol: [ "size_t", private, "<cstdlib>", public ] },
    { symbol: [ "size_t", private, "<cstring>", public ] },
    { symbol: [ "size_t", private, "<ctime>", public ] },
    { symbol: [ "size_t", private, "<cuchar>", public ] },
    { symbol: [ "size_t", private, "<cwchar>", public ] },
    # Macros that can be defined in more than one file, don't have the
    # same __foo_defined guard that other types do, so the grep above
    # doesn't discover them.  Until I figure out a better way, I just
    # add them in by hand as I discover them.
    { symbol: [ "EOF", private, "<cstdio>", public ] },
    { symbol: [ "EOF", private, "<libio.h>", public ] },
    { symbol: [ "FILE", private, "<cstdio>", public ] },
    { symbol: [ "va_list", private, "<cstdarg>", public ] },
    # These are symbols that could be defined in either stdlib.h or
    # malloc.h, but we always want the stdlib location.
    { symbol: [ "malloc", private, "<cstdlib>", public ] },
    { symbol: [ "calloc", private, "<cstdlib>", public ] },
    { symbol: [ "realloc", private, "<cstdlib>", public ] },
    { symbol: [ "free", private, "<cstdlib>", public ] },
    # Entries for NULL
    { symbol: [ "NULL", private, "<cstddef>", public ] },  # 'canonical' location for NULL
    { symbol: [ "NULL", private, "<clocale>", public ] },
    { symbol: [ "NULL", private, "<cstddef>", public ] },
    { symbol: [ "NULL", private, "<cstdio>", public ] },
    { symbol: [ "NULL", private, "<cstdlib>", public ] },
    { symbol: [ "NULL", private, "<cstring>", public ] },
    { symbol: [ "NULL", private, "<ctime>", public ] },
    { symbol: [ "NULL", private, "<cwchar>", public ] },
    { symbol: [ "NULL", private, "<clocale>", public ] },
    { symbol: [ "NULL", private, "<cstdio>", public ] },
    { symbol: [ "NULL", private, "<cstdlib>", public ] },
    { symbol: [ "NULL", private, "<cstring>", public ] },
    { symbol: [ "NULL", private, "<ctime>", public ] },
    { symbol: [ "NULL", private, "<cwchar>", public ] },

    { symbol: [ "std::allocator", private, "<memory>", public ] },
    { symbol: [ "std::allocator", private, "<string>", public ] },
    { symbol: [ "std::allocator", private, "<vector>", public ] },
    { symbol: [ "std::allocator", private, "<map>", public ] },
    { symbol: [ "std::allocator", private, "<set>", public ] },

    { symbol: [ "std::char_traits", private, "<string>", public ] },
    { symbol: [ "std::char_traits", private, "<ostream>", public ] },
    { symbol: [ "std::char_traits", private, "<istream>", public ] },

    # from gcc.st.headers.imp
    # Headers explicitly annotated with `@headername`
    { include: ["<backward/auto_ptr.h>", private, "<memory>", public ] },
    { include: ["<backward/backward_warning.h>", private, "<iosfwd>", public ] },
    { include: ["<backward/binders.h>", private, "<functional>", public ] },
    { include: ["<bits/algorithmfwd.h>", private, "<algorithm>", public ] },
    { include: ["<bits/allocated_ptr.h>", private, "<memory>", public ] },
    { include: ["<bits/allocator.h>", private, "<memory>", public ] },
    { include: ["<bits/alloc_traits.h>", private, "<memory>", public ] },
    { include: ["<bits/atomic_base.h>", private, "<atomic>", public ] },
    { include: ["<bits/atomic_lockfree_defines.h>", private, "<atomic>", public ] },
    { include: ["<bits/basic_ios.h>", private, "<ios>", public ] },
    { include: ["<bits/basic_ios.tcc>", private, "<ios>", public ] },
    { include: ["<bits/basic_string.h>", private, "<string>", public ] },
    { include: ["<bits/basic_string.tcc>", private, "<string>", public ] },
    { include: ["<bits/boost_concept_check.h>", private, "<iterator>", public ] },
    { include: ["<bits/c++0x_warning.h>", private, "<iosfwd>", public ] },
    { include: ["<bits/char_traits.h>", private, "<string>", public ] },
    { include: ["<bits/codecvt.h>", private, "<locale>", public ] },
    { include: ["<bits/concept_check.h>", private, "<iterator>", public ] },
    { include: ["<bits/cpp_type_traits.h>", private, "<ext/type_traits>", public ] },
    { include: ["<bits/cxxabi_forced.h>", private, "<cxxabi.h>", public ] },
    { include: ["<bits/deque.tcc>", private, "<deque>", public ] },
    { include: ["<bits/exception_defines.h>", private, "<exception>", public ] },
    { include: ["<bits/exception_ptr.h>", private, "<exception>", public ] },
    { include: ["<bits/forward_list.h>", private, "<forward_list>", public ] },
    { include: ["<bits/forward_list.tcc>", private, "<forward_list>", public ] },
    { include: ["<bits/fs_dir.h>", private, "<filesystem>", public ] },
    { include: ["<bits/fs_fwd.h>", private, "<filesystem>", public ] },
    { include: ["<bits/fs_ops.h>", private, "<filesystem>", public ] },
    { include: ["<bits/fs_path.h>", private, "<filesystem>", public ] },
    { include: ["<bits/fstream.tcc>", private, "<fstream>", public ] },
    { include: ["<bits/functexcept.h>", private, "<exception>", public ] },
    { include: ["<bits/functional_hash.h>", private, "<functional>", public ] },
    { include: ["<bits/gslice_array.h>", private, "<valarray>", public ] },
    { include: ["<bits/gslice.h>", private, "<valarray>", public ] },
    { include: ["<bits/hash_bytes.h>", private, "<functional>", public ] },
    { include: ["<bits/indirect_array.h>", private, "<valarray>", public ] },
    { include: ["<bits/invoke.h>", private, "<functional>", public ] },
    { include: ["<bits/ios_base.h>", private, "<ios>", public ] },
    { include: ["<bits/istream.tcc>", private, "<istream>", public ] },
    { include: ["<bits/list.tcc>", private, "<list>", public ] },
    { include: ["<bits/locale_classes.h>", private, "<locale>", public ] },
    { include: ["<bits/locale_classes.tcc>", private, "<locale>", public ] },
    { include: ["<bits/locale_conv.h>", private, "<locale>", public ] },
    { include: ["<bits/locale_facets.h>", private, "<locale>", public ] },
    { include: ["<bits/locale_facets_nonio.h>", private, "<locale>", public ] },
    { include: ["<bits/locale_facets_nonio.tcc>", private, "<locale>", public ] },
    { include: ["<bits/locale_facets.tcc>", private, "<locale>", public ] },
    { include: ["<bits/localefwd.h>", private, "<locale>", public ] },
    { include: ["<bits/mask_array.h>", private, "<valarray>", public ] },
    { include: ["<bits/memoryfwd.h>", private, "<memory>", public ] },
    { include: ["<bits/move.h>", private, "<utility>", public ] },
    { include: ["<bits/nested_exception.h>", private, "<exception>", public ] },
    { include: ["<bits/ostream_insert.h>", private, "<ostream>", public ] },
    { include: ["<bits/ostream.tcc>", private, "<ostream>", public ] },
    { include: ["<bits/parse_numbers.h>", private, "<chrono>", public ] },
    { include: ["<bits/postypes.h>", private, "<iosfwd>", public ] },
    { include: ["<bits/predefined_ops.h>", private, "<algorithm>", public ] },
    { include: ["<bits/ptr_traits.h>", private, "<memory>", public ] },
    { include: ["<bits/quoted_string.h>", private, "<iomanip>", public ] },
    { include: ["<bits/random.h>", private, "<random>", public ] },
    { include: ["<bits/random.tcc>", private, "<random>", public ] },
    { include: ["<bits/range_access.h>", private, "<iterator>", public ] },
    { include: ["<bits/refwrap.h>", private, "<functional>", public ] },
    { include: ["<bits/regex_automaton.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_automaton.tcc>", private, "<regex>", public ] },
    { include: ["<bits/regex_compiler.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_compiler.tcc>", private, "<regex>", public ] },
    { include: ["<bits/regex_constants.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_error.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_executor.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_executor.tcc>", private, "<regex>", public ] },
    { include: ["<bits/regex.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_scanner.h>", private, "<regex>", public ] },
    { include: ["<bits/regex_scanner.tcc>", private, "<regex>", public ] },
    { include: ["<bits/regex.tcc>", private, "<regex>", public ] },
    { include: ["<bits/shared_ptr_atomic.h>", private, "<memory>", public ] },
    { include: ["<bits/shared_ptr_base.h>", private, "<memory>", public ] },
    { include: ["<bits/shared_ptr.h>", private, "<memory>", public ] },
    { include: ["<bits/slice_array.h>", private, "<valarray>", public ] },
    { include: ["<bits/specfun.h>", private, "<cmath>", public ] },
    { include: ["<bits/sstream.tcc>", private, "<sstream>", public ] },
    { include: ["<bits/std_function.h>", private, "<functional>", public ] },
    { include: ["<bits/std_mutex.h>", private, "<mutex>", public ] },
    { include: ["<bits/stl_algobase.h>", private, "<algorithm>", public ] },
    { include: ["<bits/stl_algo.h>", private, "<algorithm>", public ] },
    { include: ["<bits/stl_bvector.h>", private, "<vector>", public ] },
    { include: ["<bits/stl_construct.h>", private, "<memory>", public ] },
    { include: ["<bits/stl_deque.h>", private, "<deque>", public ] },
    { include: ["<bits/stl_function.h>", private, "<functional>", public ] },
    { include: ["<bits/stl_heap.h>", private, "<queue>", public ] },
    { include: ["<bits/stl_iterator_base_funcs.h>", private, "<iterator>", public ] },
    { include: ["<bits/stl_iterator_base_types.h>", private, "<iterator>", public ] },
    { include: ["<bits/stl_iterator.h>", private, "<iterator>", public ] },
    { include: ["<bits/stl_list.h>", private, "<list>", public ] },
    { include: ["<bits/stl_map.h>", private, "<map>", public ] },
    { include: ["<bits/stl_multimap.h>", private, "<map>", public ] },
    { include: ["<bits/stl_multiset.h>", private, "<set>", public ] },
    { include: ["<bits/stl_numeric.h>", private, "<numeric>", public ] },
    { include: ["<bits/stl_pair.h>", private, "<utility>", public ] },
    { include: ["<bits/stl_queue.h>", private, "<queue>", public ] },
    { include: ["<bits/stl_raw_storage_iter.h>", private, "<memory>", public ] },
    { include: ["<bits/stl_relops.h>", private, "<utility>", public ] },
    { include: ["<bits/stl_set.h>", private, "<set>", public ] },
    { include: ["<bits/stl_stack.h>", private, "<stack>", public ] },
    { include: ["<bits/stl_tempbuf.h>", private, "<memory>", public ] },
    { include: ["<bits/stl_uninitialized.h>", private, "<memory>", public ] },
    { include: ["<bits/stl_vector.h>", private, "<vector>", public ] },
    { include: ["<bits/streambuf_iterator.h>", private, "<iterator>", public ] },
    { include: ["<bits/streambuf.tcc>", private, "<streambuf>", public ] },
    { include: ["<bits/stream_iterator.h>", private, "<iterator>", public ] },
    { include: ["<bits/stringfwd.h>", private, "<string>", public ] },
    { include: ["<bits/string_view.tcc>", private, "<string_view>", public ] },
    { include: ["<bits/uniform_int_dist.h>", private, "<random>", public ] },
    { include: ["<bits/unique_ptr.h>", private, "<memory>", public ] },
    { include: ["<bits/unordered_map.h>", private, "<unordered_map>", public ] },
    { include: ["<bits/unordered_set.h>", private, "<unordered_set>", public ] },
    { include: ["<bits/valarray_after.h>", private, "<valarray>", public ] },
    { include: ["<bits/valarray_array.h>", private, "<valarray>", public ] },
    { include: ["<bits/valarray_array.tcc>", private, "<valarray>", public ] },
    { include: ["<bits/valarray_before.h>", private, "<valarray>", public ] },
    { include: ["<bits/vector.tcc>", private, "<vector>", public ] },
    { include: ["<decimal/decimal.h>", private, "<decimal>", public ] },
    { include: ["<experimental/bits/fs_dir.h>", private, "<experimental/filesystem>", public ] },
    { include: ["<experimental/bits/fs_fwd.h>", private, "<experimental/filesystem>", public ] },
    { include: ["<experimental/bits/fs_ops.h>", private, "<experimental/filesystem>", public ] },
    { include: ["<experimental/bits/fs_path.h>", private, "<experimental/filesystem>", public ] },
    { include: ["<experimental/bits/shared_ptr.h>", private, "<experimental/memory>", public ] },
    { include: ["<experimental/bits/string_view.tcc>", private, "<experimental/string_view>", public ] },
    { include: ["<ext/cast.h>", private, "<ext/pointer.h>", public ] },
    { include: ["<ext/random.tcc>", private, "<ext/random>", public ] },
    { include: ["<ext/rc_string_base.h>", private, "<ext/vstring.h>", public ] },
    { include: ["<ext/ropeimpl.h>", private, "<ext/rope>", public ] },
    { include: ["<ext/sso_string_base.h>", private, "<ext/vstring.h>", public ] },
    { include: ["<ext/vstring_fwd.h>", private, "<ext/vstring.h>", public ] },
    { include: ["<ext/vstring.tcc>", private, "<ext/vstring.h>", public ] },
    { include: ["<ext/vstring_util.h>", private, "<ext/vstring.h>", public ] },

    { include: ["<bits/basic_file.h>", private, "<ios>", public ] },
    { include: ["<bits/c++allocator.h>", private, "<memory>", public ] },
    { include: ["<bits/c++config.h>", private, "<iosfwd>", public ] },
    { include: ["<bits/c++io.h>", private, "<ios>", public ] },
    { include: ["<bits/c++locale.h>", private, "<locale>", public ] },
    { include: ["<bits/cpu_defines.h>", private, "<iosfwd>", public ] },
    { include: ["<bits/ctype_base.h>", private, "<locale>", public ] },
    { include: ["<bits/ctype_inline.h>", private, "<locale>", public ] },
    { include: ["<bits/error_constants.h>", private, "<system_error>", public ] },
    { include: ["<bits/messages_members.h>", private, "<locale>", public ] },
    { include: ["<bits/opt_random.h>", private, "<random>", public ] },
    { include: ["<bits/os_defines.h>", private, "<iosfwd>", public ] },
    { include: ["<bits/time_members.h>", private, "<locale>", public ] },
    { include: ["<ext/opt_random.h>", private, "<ext/random>", public ] },
    # I removed a lot of 'meaningless' dependencies -- for instance,
    # <functional> //includes <bits/stringfwd.h>, but if someone is
    # using strings, <functional> isn't enough to satisfy iwyu.
    # We may need to add other dirs in future versions of gcc.
    { include: ["<bits/atomic_word.h>", private, "<ext/atomicity.h>", public ] },
    { include: ["<bits/basic_file.h>", private, "<fstream>", public ] },
    { include: ["<bits/boost_sp_shared_count.h>", private, "<memory>", public ] },
    { include: ["<bits/c++io.h>", private, "<ext/stdio_sync_filebuf.h>", public ] },
    { include: ["<bits/c++config.h>", private, "<cstddef>", public ] },
    { include: ["<bits/cmath.tcc>", private, "<cmath>", public ] },
    { include: ["<bits/codecvt.h>", private, "<fstream>", public ] },
    { include: ["<bits/cxxabi_tweaks.h>", private, "<cxxabi.h>", public ] },
    { include: ["<bits/functional_hash.h>", private, "<unordered_map>", public ] },
    { include: ["<bits/hashtable.h>", private, "<unordered_map>", public ] },
    { include: ["<bits/hashtable.h>", private, "<unordered_set>", public ] },
    { include: ["<bits/ios_base.h>", private, "<iostream>", public ] },
    { include: ["<bits/ios_base.h>", private, "<iomanip>", public ] },
    { include: ["<bits/postypes.h>", private, "<iostream>", public ] },
    { include: ["<bits/stl_pair.h>", private, "<tr1/utility>", public ] },
    { include: ["<bits/stl_tree.h>", private, "<map>", public ] },
    { include: ["<bits/stl_tree.h>", private, "<set>", public ] },

    # All .tcc files are gcc internal-include files.  We get them from
    # I had to manually edit some of the entries to say the map-to is private.
    { include: ["<bits/cmath.tcc>", private, "<cmath>", public ] },
    { include: ["<debug/safe_iterator.tcc>", private, "<debug/safe_iterator.h>", public ] },
    # Some bits->bits //includes: A few files in bits re-export
    # symbols from other files in bits.
    # and carefully picked reasonable-looking results (algorithm
    # *uses* pair but doesn't *re-export* pair, for instance).
    { include: ["<bits/c++allocator.h>", private, "<bits/allocator.h>", private ] },
    { include: ["<bits/ctype_base.h>", private, "<bits/locale_facets.h>", private ] },
    { include: ["<bits/ctype_inline.h>", private, "<bits/locale_facets.h>", private ] },
    { include: ["<bits/messages_members.h>", private,
    "<bits/locale_facets_nonio.h>", private ] },
    { include: ["<bits/stl_move.h>", private, "<bits/stl_algobase.h>", private ] },
    # I don't think we want to be having people move to 'backward/'
    # yet.  (These hold deprecated STL classes that we still use
    # actively.)  These are the ones that turned up in an analysis of
    { include: ["<backward/hash_fun.h>", private, "<hash_map>", public ] },
    { include: ["<backward/hash_fun.h>", private, "<hash_set>", public ] },
    { include: ["<backward/hashtable.h>", private, "<hash_map>", public ] },
    { include: ["<backward/hashtable.h>", private, "<hash_set>", public ] },
    { include: ["<backward/strstream>", private, "<strstream>", public ] },
    # We have backward as part of the -I search path now, so have the
    # non-backwards-prefix version as well.
    { include: ["<auto_ptr.h>", private, "<memory>", public ] },
    { include: ["<binders.h>", private, "<functional>", public ] },
    { include: ["<hash_fun.h>", private, "<hash_map>", public ] },
    { include: ["<hash_fun.h>", private, "<hash_set>", public ] },
    { include: ["<hashtable.h>", private, "<hash_map>", public ] },
    { include: ["<hashtable.h>", private, "<hash_set>", public ] },
    # (This one should perhaps be found automatically somehow.)
    { include: ["<ext/sso_string_base.h>", private, "<string>", public ] },
    # The iostream .h files are confusing.  Lots of private headers,
    # which are handled above, but we also have public headers
    # #including each other (eg <iostream> //includes <istream>).  We
    # are pretty forgiving: if a user specifies any public header, we
    # generally don't require the others.
    { include: ["<ios>", public, "<istream>", public ] },
    { include: ["<ios>", public, "<ostream>", public ] },
    { include: ["<iosfwd>", public, "<ios>", public ] },
    { include: ["<iosfwd>", public, "<streambuf>", public ] },
    { include: ["<istream>", public, "<fstream>", public ] },
    { include: ["<istream>", public, "<iostream>", public ] },
    { include: ["<istream>", public, "<sstream>", public ] },
    { include: ["<ostream>", public, "<fstream>", public ] },
    { include: ["<ostream>", public, "<iostream>", public ] },
    { include: ["<ostream>", public, "<istream>", public ] },
    { include: ["<ostream>", public, "<sstream>", public ] },
    { include: ["<streambuf>", public, "<ios>", public ] },
    # The location of exception_defines.h varies by GCC version.  It should
    # never be included directly.
    { include: ["<exception_defines.h>", private, "<exception>", public ] },

    # from gcc.libc.imp
    { include: [ "<bits/a.out.h>", private, "<a.out.h>", public ] },
    { include: [ "<bits/auxv.h>", private, "<sys/auxv.h>", public ] },
    { include: [ "<bits/byteswap.h>", private, "<byteswap.h>", public ] },
    { include: [ "<bits/cmathcalls.h>", private, "<ccomplex>", public ] },
    { include: [ "<bits/confname.h>", private, "<unistd.h>", public ] },
    { include: [ "<bits/dirent.h>", private, "<dirent.h>", public ] },
    { include: [ "<bits/dlfcn.h>", private, "<dlfcn.h>", public ] },
    { include: [ "<bits/elfclass.h>", private, "<link.h>", public ] },
    { include: [ "<bits/endian.h>", private, "<endian.h>", public ] },
    { include: [ "<bits/environments.h>", private, "<unistd.h>", public ] },
    { include: [ "<bits/epoll.h>", private, "<sys/epoll.h>", public ] },
    { include: [ "<bits/errno.h>", private, "<cerrno>", public ] },
    { include: [ "<bits/error.h>", private, "<error.h>", public ] },
    { include: [ "<bits/eventfd.h>", private, "<sys/eventfd.h>", public ] },
    { include: [ "<bits/fcntl.h>", private, "<fcntl.h>", public ] },
    { include: [ "<bits/fcntl2.h>", private, "<fcntl.h>", public ] },
    { include: [ "<bits/fenv.h>", private, "<cfenv>", public ] },
    { include: [ "<bits/fenvinline.h>", private, "<cfenv>", public ] },
    { include: [ "<bits/huge_val.h>", private, "<cmath>", public ] },
    { include: [ "<bits/huge_valf.h>", private, "<cmath>", public ] },
    { include: [ "<bits/huge_vall.h>", private, "<cmath>", public ] },
    { include: [ "<bits/hwcap.h>", private, "<sys/auxv.h>", public ] },
    { include: [ "<bits/inf.h>", private, "<cmath>", public ] },
    { include: [ "<bits/inotify.h>", private, "<sys/inotify.h>", public ] },
    { include: [ "<bits/ioctl-types.h>", private, "<sys/ioctl.h>", public ] },
    { include: [ "<bits/ioctls.h>", private, "<sys/ioctl.h>", public ] },
    { include: [ "<bits/ipc.h>", private, "<sys/ipc.h>", public ] },
    { include: [ "<bits/ipctypes.h>", private, "<sys/ipc.h>", public ] },
    { include: [ "<bits/libio-ldbl.h>", private, "<libio.h>", public ] },
    { include: [ "<bits/link.h>", private, "<link.h>", public ] },
    { include: [ "<bits/locale.h>", private, "<clocale>", public ] },
    { include: [ "<bits/math-finite.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mathcalls.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mathdef.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mathinline.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mman.h>", private, "<sys/mman.h>", public ] },
    { include: [ "<bits/monetary-ldbl.h>", private, "<monetary.h>", public ] },
    { include: [ "<bits/mqueue.h>", private, "<mqueue.h>", public ] },
    { include: [ "<bits/mqueue2.h>", private, "<mqueue.h>", public ] },
    { include: [ "<bits/msq.h>", private, "<sys/msg.h>", public ] },
    { include: [ "<bits/nan.h>", private, "<cmath>", public ] },
    { include: [ "<bits/netdb.h>", private, "<netdb.h>", public ] },
    { include: [ "<bits/param.h>", private, "<sys/param.h>", public ] },
    { include: [ "<bits/poll.h>", private, "<sys/poll.h>", private ] },
    { include: [ "<bits/poll2.h>", private, "<sys/poll.h>", private ] },
    { include: [ "<bits/posix1_lim.h>", private, "<climits>", public ] },
    { include: [ "<bits/posix2_lim.h>", private, "<climits>", public ] },
    { include: [ "<bits/posix_opt.h>", private, "<unistd.h>", public ] },
    { include: [ "<bits/printf-ldbl.h>", private, "<printf.h>", public ] },
    { include: [ "<bits/pthreadtypes.h>", private, "<pthread.h>", public ] },
    { include: [ "<bits/resource.h>", private, "<sys/resource.h>", public ] },
    { include: [ "<bits/sched.h>", private, "<sched.h>", public ] },
    { include: [ "<bits/select.h>", private, "<sys/select.h>", public ] },
    { include: [ "<bits/select2.h>", private, "<sys/select.h>", public ] },
    { include: [ "<bits/sem.h>", private, "<sys/sem.h>", public ] },
    { include: [ "<bits/semaphore.h>", private, "<semaphore.h>", public ] },
    { include: [ "<bits/setjmp.h>", private, "<csetjmp>", public ] },
    { include: [ "<bits/setjmp2.h>", private, "<csetjmp>", public ] },
    { include: [ "<bits/shm.h>", private, "<sys/shm.h>", public ] },
    { include: [ "<bits/sigaction.h>", private, "<csignal>", public ] },
    { include: [ "<bits/sigcontext.h>", private, "<csignal>", public ] },
    { include: [ "<bits/siginfo.h>", private, "<csignal>", public ] },
    { include: [ "<bits/signum.h>", private, "<csignal>", public ] },
    { include: [ "<bits/sigset.h>", private, "<csignal>", public ] },
    { include: [ "<bits/sigstack.h>", private, "<csignal>", public ] },
    { include: [ "<bits/sigthread.h>", private, "<csignal>", public ] },
    { include: [ "<bits/sockaddr.h>", private, "<sys/un.h>", public ] },
    { include: [ "<bits/socket.h>", private, "<sys/socket.h>", public ] },
    { include: [ "<bits/socket2.h>", private, "<sys/socket.h>", public ] },
    { include: [ "<bits/socket_type.h>", private, "<sys/socket.h>", public ] },
    { include: [ "<bits/stab.def>", private, "<stab.h>", public ] },
    { include: [ "<bits/stat.h>", private, "<sys/stat.h>", public ] },
    { include: [ "<bits/statfs.h>", private, "<sys/statfs.h>", public ] },
    { include: [ "<bits/statvfs.h>", private, "<sys/statvfs.h>", public ] },
    { include: [ "<bits/stdio-ldbl.h>", private, "<cstdio>", public ] },
    { include: [ "<bits/stdio-lock.h>", private, "<libio.h>", public ] },
    { include: [ "<bits/stdio.h>", private, "<cstdio>", public ] },
    { include: [ "<bits/stdio2.h>", private, "<cstdio>", public ] },
    { include: [ "<bits/stdio_lim.h>", private, "<cstdio>", public ] },
    { include: [ "<bits/stdlib-bsearch.h>", private, "<cstdlib>", public ] },
    { include: [ "<bits/stdlib-float.h>", private, "<cstdlib>", public ] },
    { include: [ "<bits/stdlib-ldbl.h>", private, "<cstdlib>", public ] },
    { include: [ "<bits/stdlib.h>", private, "<cstdlib>", public ] },
    { include: [ "<bits/string.h>", private, "<cstring>", public ] },
    { include: [ "<bits/string2.h>", private, "<cstring>", public ] },
    { include: [ "<bits/string3.h>", private, "<cstring>", public ] },
    { include: [ "<bits/stropts.h>", private, "<stropts.h>", public ] },
    { include: [ "<bits/sys_errlist.h>", private, "<cstdio>", public ] },
    { include: [ "<bits/syscall.h>", private, "<sys/syscall.h>", private ] },
    { include: [ "<bits/sysctl.h>", private, "<sys/sysctl.h>", public ] },
    { include: [ "<bits/syslog-ldbl.h>", private, "<sys/syslog.h>", private ] },
    { include: [ "<bits/syslog-path.h>", private, "<sys/syslog.h>", private ] },
    { include: [ "<bits/syslog.h>", private, "<sys/syslog.h>", private ] },
    { include: [ "<bits/termios.h>", private, "<termios.h>", public ] },
    { include: [ "<bits/time.h>", private, "<sys/time.h>", public ] },
    { include: [ "<bits/timerfd.h>", private, "<sys/timerfd.h>", public ] },
    { include: [ "<bits/timex.h>", private, "<sys/timex.h>", public ] },
    { include: [ "<bits/types.h>", private, "<sys/types.h>", public ] },
    { include: [ "<bits/uio.h>", private, "<sys/uio.h>", public ] },
    { include: [ "<bits/unistd.h>", private, "<unistd.h>", public ] },
    { include: [ "<bits/ustat.h>", private, "<sys/ustat.h>", private ] },
    { include: [ "<bits/utmp.h>", private, "<utmp.h>", public ] },
    { include: [ "<bits/utmpx.h>", private, "<utmpx.h>", public ] },
    { include: [ "<bits/utsname.h>", private, "<sys/utsname.h>", public ] },
    { include: [ "<bits/waitflags.h>", private, "<sys/wait.h>", public ] },
    { include: [ "<bits/waitstatus.h>", private, "<sys/wait.h>", public ] },
    { include: [ "<bits/wchar-ldbl.h>", private, "<cwchar>", public ] },
    { include: [ "<bits/wchar.h>", private, "<cwchar>", public ] },
    { include: [ "<bits/wchar2.h>", private, "<cwchar>", public ] },
    { include: [ "<bits/wordsize.h>", private, "<climits>", public ] },
    { include: [ "<bits/xopen_lim.h>", private, "<climits>", public ] },
    { include: [ "<bits/xtitypes.h>", private, "<stropts.h>", public ] },
    # Sometimes libc tells you what mapping to do via an '#error':
    # # error "Never use <bits/dlfcn.h> directly; include <dlfcn.h> instead."
    # or
    # # error "Never include <bits/socket_type.h> directly; use <sys/socket.h> instead."
    { include: [ "<bits/a.out.h>", private, "<a.out.h>", public ] },
    { include: [ "<bits/byteswap-16.h>", private, "<byteswap.h>", public ] },
    { include: [ "<bits/byteswap.h>", private, "<byteswap.h>", public ] },
    { include: [ "<bits/cmathcalls.h>", private, "<ccomplex>", public ] },
    { include: [ "<bits/confname.h>", private, "<unistd.h>", public ] },
    { include: [ "<bits/dirent.h>", private, "<dirent.h>", public ] },
    { include: [ "<bits/dlfcn.h>", private, "<dlfcn.h>", public ] },
    { include: [ "<bits/elfclass.h>", private, "<link.h>", public ] },
    { include: [ "<bits/endian.h>", private, "<endian.h>", public ] },
    { include: [ "<bits/epoll.h>", private, "<sys/epoll.h>", public ] },
    { include: [ "<bits/eventfd.h>", private, "<sys/eventfd.h>", public ] },
    { include: [ "<bits/fcntl-linux.h>", private, "<fcntl.h>", public ] },
    { include: [ "<bits/fcntl.h>", private, "<fcntl.h>", public ] },
    { include: [ "<bits/fenv.h>", private, "<cfenv>", public ] },
    { include: [ "<bits/huge_val.h>", private, "<cmath>", public ] },
    { include: [ "<bits/huge_valf.h>", private, "<cmath>", public ] },
    { include: [ "<bits/huge_vall.h>", private, "<cmath>", public ] },
    { include: [ "<bits/in.h>", private, "<netinet/in.h>", public ] },
    { include: [ "<bits/inf.h>", private, "<cmath>", public ] },
    { include: [ "<bits/inotify.h>", private, "<sys/inotify.h>", public ] },
    { include: [ "<bits/ioctl-types.h>", private, "<sys/ioctl.h>", public ] },
    { include: [ "<bits/ioctls.h>", private, "<sys/ioctl.h>", public ] },
    { include: [ "<bits/ipc.h>", private, "<sys/ipc.h>", public ] },
    { include: [ "<bits/ipctypes.h>", private, "<sys/ipc.h>", public ] },
    { include: [ "<bits/locale.h>", private, "<clocale>", public ] },
    { include: [ "<bits/math-finite.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mathdef.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mathinline.h>", private, "<cmath>", public ] },
    { include: [ "<bits/mman-linux.h>", private, "<sys/mman.h>", public ] },
    { include: [ "<bits/mman.h>", private, "<sys/mman.h>", public ] },
    { include: [ "<bits/mqueue.h>", private, "<mqueue.h>", public ] },
    { include: [ "<bits/msq.h>", private, "<sys/msg.h>", public ] },
    { include: [ "<bits/nan.h>", private, "<cmath>", public ] },
    { include: [ "<bits/param.h>", private, "<sys/param.h>", public ] },
    { include: [ "<bits/poll.h>", private, "<sys/poll.h>", private ] },
    { include: [ "<bits/predefs.h>", private, "<features.h>", public ] },
    { include: [ "<bits/resource.h>", private, "<sys/resource.h>", public ] },
    { include: [ "<bits/select.h>", private, "<sys/select.h>", public ] },
    { include: [ "<bits/semaphore.h>", private, "<semaphore.h>", public ] },
    { include: [ "<bits/sigcontext.h>", private, "<csignal>", public ] },
    { include: [ "<bits/signalfd.h>", private, "<sys/signalfd.h>", public ] },
    { include: [ "<bits/stdlib-float.h>", private, "<cstdlib>", public ] },
    { include: [ "<bits/string.h>", private, "<cstring>", public ] },
    { include: [ "<bits/string2.h>", private, "<cstring>", public ] },
    { include: [ "<bits/string3.h>", private, "<cstring>", public ] },
    { include: [ "<bits/syscall.h>", private, "<sys/syscall.h>", private ] },
    { include: [ "<bits/timerfd.h>", private, "<sys/timerfd.h>", public ] },
    { include: [ "<bits/typesizes.h>", private, "<sys/types.h>", public ] },
    # Top-level #includes that just forward to another file:
    # For each file, I looked at the list of canonical header files --
    # http://www.opengroup.org/onlinepubs/9699919799/idx/head.html --
    # to decide which of the two files is canonical.  If neither is
    # on the POSIX.1 1998 list, I just choose the top-level one.
    { include: [ "<sys/poll.h>", private, "<poll.h>", public ] },
    { include: [ "<sys/syscall.h>", private, "<syscall.h>", public ] },
    { include: [ "<sys/syslog.h>", private, "<syslog.h>", public ] },
    { include: [ "<sys/ustat.h>", private, "<ustat.h>", public ] },
    { include: [ "<wait.h>", private, "<sys/wait.h>", public ] },
    # These are all files in bits/ that delegate to asm/ and linux/ to
    # do all (or lots) of the work.  Note these are private->private.
    { include: [ "<linux/errno.h>", private, "<bits/errno.h>", private ] },
    { include: [ "<asm/ioctls.h>", private, "<bits/ioctls.h>", private ] },
    { include: [ "<asm/socket.h>", private, "<bits/socket.h>", private ] },
    { include: [ "<linux/socket.h>", private, "<bits/socket.h>", private ] },
    # Some asm files have 32- and 64-bit variants:
    { include: [ "<asm/posix_types_32.h>", private, "<asm/posix_types.h>", public ] },
    { include: [ "<asm/posix_types_64.h>", private, "<asm/posix_types.h>", public ] },
    { include: [ "<asm/unistd_32.h>", private, "<asm/unistd.h>", private ] },
    { include: [ "<asm/unistd_64.h>", private, "<asm/unistd.h>", private ] },

    { include: [ "<asm/errno.h>", private, "<cerrno>", public ] },
    { include: [ "<asm/errno-base.h>", private, "<cerrno>", public ] },
    { include: [ "<asm/ptrace-abi.h>", private, "<asm/ptrace.h>", public ] },
    { include: [ "<asm/unistd.h>", private, "<syscall.h>", public ] },
    { include: [ "<linux/limits.h>", private, "<climits>", public ] },   # PATH_MAX
    { include: [ "<linux/prctl.h>", private, "<sys/prctl.h>", public ] },
    { include: [ "<sys/ucontext.h>", private, "<ucontext.h>", public ] },
]
