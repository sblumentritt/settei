diff --git a/main.lua b/main.lua
index 4ecd4f4a..6dfcfd73 100644
--- a/main.lua
+++ b/main.lua
@@ -1,8 +1,11 @@
 local currentPath = debug.getinfo(1, 'S').source:sub(2)
 local rootPath = currentPath:gsub('[/\\]*[^/\\]-$', '')
-loadfile((rootPath == '' and '.' or rootPath) .. '/platform.lua')('script')
+loadfile(rootPath .. '/platform.lua')('script')
 local fs = require 'bee.filesystem'
+local math = require 'math'
 ROOT = fs.path(rootPath)
+TMP_ROOT = fs.path('/tmp/lua-language-server.' .. math.random(1000, 9000))
+LOG_PATH = TMP_ROOT / 'log'
 LANG = LANG or 'en-US'
 
 debug.setcstacklimit(200)
@@ -10,7 +13,7 @@ collectgarbage('generational', 10, 100)
 --collectgarbage('incremental', 120, 120, 0)
 
 log = require 'log'
-log.init(ROOT, ROOT / 'log' / 'service.log')
+log.init(ROOT, LOG_PATH / 'service.log')
 log.info('Lua Lsp startup, root: ', ROOT)
 log.debug('ROOT:', ROOT:string())
 
diff --git a/make.lua b/make.lua
index ee733c2c..8f3ca9f0 100644
--- a/make.lua
+++ b/make.lua
@@ -57,6 +57,4 @@ lm:build 'unittest' {
 
 lm:default {
     'install',
-    'test',
-    'unittest',
 }
diff --git a/platform.lua b/platform.lua
index 6c9d7c09..77e45c35 100644
--- a/platform.lua
+++ b/platform.lua
@@ -31,13 +31,7 @@ end
 
 local currentPath = debug.getinfo(1, 'S').source:sub(2)
 local fs = require 'bee.filesystem'
-local rootPath = fs.path(currentPath):remove_filename():string()
-if dll == '.dll' then
-    rootPath = rootPath:gsub('/', '\\')
-    package.path  = rootPath .. script .. '\\?.lua'
-          .. ';' .. rootPath .. script .. '\\?\\init.lua'
-else
-    rootPath = rootPath:gsub('\\', '/')
-    package.path  = rootPath .. script .. '/?.lua'
-          .. ';' .. rootPath .. script .. '/?/init.lua'
-end
+local rootPath = fs.path(currentPath):remove_filename()
+
+package.path = tostring(rootPath / script / '?.lua')
+     .. ';' .. tostring(rootPath / script / '?' / 'init.lua')
diff --git a/script/library.lua b/script/library.lua
index 06b7d8f4..d5524988 100644
--- a/script/library.lua
+++ b/script/library.lua
@@ -144,7 +144,7 @@ local function compileSingleMetaDoc(script, metaLang)
         end,
     }, { __index = _ENV })
 
-    util.saveFile((ROOT / 'log' / 'middleScript.lua'):string(), middleScript)
+    util.saveFile((TMP_ROOT / 'middleScript.lua'):string(), middleScript)
 
     assert(load(middleScript, middleScript, 't', env))()
     return table.concat(compileBuf)
@@ -163,7 +163,7 @@ end
 local function compileMetaDoc()
     local langID  = lang.id
     local version = config.config.runtime.version
-    local metapath = ROOT / 'meta' / config.config.runtime.meta:gsub('%$%{(.-)%}', {
+    local metapath = TMP_ROOT / 'meta' / config.config.runtime.meta:gsub('%$%{(.-)%}', {
         version  = version,
         language = langID,
     })
@@ -179,7 +179,7 @@ local function compileMetaDoc()
 
     m.metaPath = metapath:string()
     m.metaPaths = {}
-    fs.create_directory(metapath)
+    fs.create_directories(metapath)
     local templateDir = ROOT / 'meta' / 'template'
     for fullpath in templateDir:list_directory() do
         local filename = fullpath:filename()
diff --git a/script/workspace/workspace.lua b/script/workspace/workspace.lua
index c76eec55..9ed199e4 100644
--- a/script/workspace/workspace.lua
+++ b/script/workspace/workspace.lua
@@ -29,7 +29,7 @@ function m.init(uri)
     end
     m.uri  = uri
     m.path = m.normalize(furi.decode(uri))
-    local logPath = ROOT / 'log' / (uri:gsub('[/:]+', '_') .. '.log')
+    local logPath = LOG_PATH / (uri:gsub('[/:]+', '_') .. '.log')
     log.info('Log path: ', logPath)
     log.init(ROOT, logPath)
 end
diff --git a/test.lua b/test.lua
index ed8d8dfc..b5e4892c 100644
--- a/test.lua
+++ b/test.lua
@@ -1,19 +1,19 @@
 local currentPath = debug.getinfo(1, 'S').source:sub(2)
 local rootPath = currentPath:gsub('[/\\]*[^/\\]-$', '')
-rootPath = rootPath == '' and '.' or rootPath
 loadfile(rootPath .. '/platform.lua')('script')
 package.path  = package.path
       .. ';' .. rootPath .. '/test/?.lua'
       .. ';' .. rootPath .. '/test/?/init.lua'
 local fs = require 'bee.filesystem'
 ROOT = fs.path(rootPath)
+LOG_PATH = ROOT / 'log'
 LANG = 'zh-CN'
 TEST = true
 
 collectgarbage 'generational'
 
 log = require 'log'
-log.init(ROOT, ROOT / 'log' / 'test.log')
+log.init(ROOT, LOG_PATH / 'test.log')
 log.debug('测试开始')
 ac = {}
 
